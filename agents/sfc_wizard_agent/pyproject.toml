[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "sfc-wizard-agent"
version = "0.1.0"
description = "Agent based in Strands for SFC (Shopfloor Connectivity)"
authors = [
    {name = "Gezim Musliaj", email = "gmuslia@amazon.de"},
    {name = "Hubert Asamer", email = "asamerh@amazon.de"},
]
license = {text = "Apache-2.0"}
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "strands-agents",
    "strands-agents-tools",
    "python-dotenv",
    "black",
    "jmespath",
    "fastmcp>=2.10.4",
    "markdown>=3.8.2",
    "mcp>=1.10.1",
    "flask>=2.3.0",
    "flask-socketio>=5.3.0",
    "matplotlib>=3.10.3",
]
keywords = ["ai", "agent", "strands", "aws", "sfc", "shopfloor"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Build Tools",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.4.1",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=6.1.2",
    "black>=25.1.0",
]

[project.scripts]
agent = "sfc_wizard.agent:main"
sfc-wizard-ui = "sfc_wizard.ui:main"

[tool.hatch.build.targets.wheel]
packages = ["sfc_wizard"]

[tool.setuptools.packages.find]
where = ["."]
include = ["sfc_wizard*"]
exclude = ["tests*", "scripts*"]

[tool.setuptools.package-data]
"*" = ["*.json", "html/*.html", "html/assets/*.js", "html/assets/*.css", "html/assets/*.map", "html/assets/*.ico", "html/assets/*.png"]

[tool.black]
line-length = 88
target-version = ['py310']

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=. --cov-report=term-missing"

[tool.coverage.run]
source = ["."]
omit = [
    "*/tests/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
    "except ImportError",
]

[project.urls]
Homepage = "https://aws.amazon.com/blogs/industries/collecting-data-from-industrial-devices-to-aws-services/"
Repository = "https://github.com/aws-samples/sample-shopfloor-connectivity-agentic"
